version: '3'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    ports:
      - '8000:8000/tcp'
      - '127.0.0.1:8001:8001/tcp'
      - '8443:8443/tcp'
      - '127.0.0.1:8444:8444/tcp'
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    environment:
      - NODE_ENV=development

  mongo:
    image: 'mongo:latest'
    ports:
      - '28017:27017'
    volumes:
      - /data/db

  auth-microservice:
    build:
      context: ./auth-microservice
      dockerfile: Dockerfile.dev
    volumes:
      - ./auth-microservice:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=c4VJW6YavdKjhi10ltjF5UTd9utI8qb4
      - JWT_ISS=HkHlwlpvDmdcXdWRNIzzF9KkPD2BCwNv
      - MONGO_URL=mongodb://mongo:27017/auth-db
    ports:
      - '8081:3000'
    depends_on:
      - mongo

  plant-predictions-microservice:
    build:
      context: ./plant-predictions-microservice
      dockerfile: Dockerfile.dev
    volumes:
      - ./plant-predictions-microservice:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=c4VJW6YavdKjhi10ltjF5UTd9utI8qb4
      - JWT_ISS=HkHlwlpvDmdcXdWRNIzzF9KkPD2BCwNv
      - MONGO_URL=mongodb://mongo:27017/plant-predictions-db
      - MULTER_DEST=./upload
    ports:
      - '8082:3000'
    depends_on:
      - mongo
